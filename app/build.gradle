apply plugin: 'com.android.application'
//应用插件
apply plugin: 'com.bugtags.library.plugin'

def buildTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

def filePrivateProperties = file("../local.properties")


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.way.captain"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0.0"
    }
    signingConfigs {
        release {
            if (filePrivateProperties.exists()) {
                Properties propsPrivate = new Properties()
                propsPrivate.load(new FileInputStream(filePrivateProperties))
                storeFile file(propsPrivate['key.store'])
                keyAlias propsPrivate['key.alias']
                storePassword propsPrivate['key.store.password']
                keyPassword propsPrivate['kkey.alias.password']
            }

        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //是否开启BUGTAG
            buildConfigField "boolean", "BUGTAG_ENABLED", "true"
            //BUGTAG appkey
            buildConfigField "String", "BUGTAG_APPKEY", APP_KEY
            shrinkResources false
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //是否开启BUGTAG
            buildConfigField "boolean", "BUGTAG_ENABLED", "false"
            //BUGTAG appkey
            buildConfigField "String", "BUGTAG_APPKEY", APP_KEY
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //配置生成的文件名
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            if (file != null && file.name.endsWith('release.apk')) {//变种名为以release.apk结尾时才修改名字
                def fileName = file.name.replace(file.name, "Captain_V" + variant.versionName + "_${buildTime()}.apk")
                output.outputFile = new File(file.parentFile, fileName)
            }
        }
    }

    //必须配置，否则自动上传不会生效
    bugtags {
        appKey APP_KEY
        appSecret APP_SECRET
        //mappingUploadEnabled false
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.android.support:design:23.2.0'
    compile 'com.android.support:recyclerview-v7:23.2.0'
    compile 'com.android.support:cardview-v7:23.2.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.alexvasilkov:android-commons:1.2.4'
    compile('com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.8.6@aar') {
        transitive = true
    }
    compile 'com.bugtags.library:bugtags-lib:latest.integration'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1' // or 1.4-beta1
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1' // or 1.4-beta1
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1' // or 1.4-beta1
}
